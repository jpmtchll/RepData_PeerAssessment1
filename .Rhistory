dum<-a[a$ACR==3,na.rm()==TRUE,]
agricultureLogical<-(a[(a$ACR==3 & a$AGS==6),])
which(agricultureLogical)
dum<-a[if a$ACR==3,]
dum<-if a[ a$ACR==3,]
agricultureLogical<-(a[which(a$ACR==3 & a$AGS==6),])
agricultureLogical
head(agricultureLogical)
which(agricultureLogical==TRUE)
dum<-a[if a$ACR==3,],rm.na==TRUE
dum<-a[(a$ACR==3, rm.na()==TRUE),]
dum<-a[(a$ACR==3 rm.na()==TRUE),]
dum<-a[(a$ACR==3 na.rm()==TRUE),]
dum<-a[(a$ACR==3 ,na.rm()==TRUE),]
dum<-a[(a$ACR==3 & !is.na(a$ACR),]
dum<-a[(a$ACR==3 & !is.na(a$ACR)),]
dum
head(dum)
which(dum)
dum<-a[(!is.na(a$ACR)),]
which(dum)
dum<- a$ACR==3
head(dum)
agricultureLogical<-a$ACR==3 & a$AGS==6
which(agricultureLogical)
url<-"http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
file.download(url,destfile="quiz3_2pic.jpg")
download.file(url,destfile="quiz3_2pic.jpg")
install.packages("jpeg")
library(jpeg)
img<-readJPEG(system.file("quiz3_2pic.jpg")
)
img<-readJPEG(system.file("img","quiz3_2pic.jpg",package="jpeg")
)
img<-readJPEG("quiz3_2pic.jpg")
quantile(img)
quantile(img,native==TRUE)
img<-readJPEG("quiz3_2pic.jpg",native==TRUE)
img<-readJPEG("quiz3_2pic.jpg",native=TRUE)
quantile(img,native==TRUE)
quantile(img)
quantile(img,probs=seq(0.3,.8))
quantile(img,probs=seq(0.3,.8,1))
quantile(img,probs=seq(0.3,0.8,1))
quantile(img,probs=seq(0.8,1))
quantile(img,probs=seq(0.,0.3,0.8,1))
quantile(img,probs=seq(0.,1))
quantile(img,probs=seq(0.,1),type=10)
quantile(img,probs=seq(0.,1,.3))
quantile(img,probs=seq(0.,1,.2))
quantile(img,probs=seq(0.,1,.1))
img<-readJPEG("quiz3_2pic.jpg",native=TRUE)
)
file.download(url,destfile="quiz3_2pic.jpg")
download.file(url,destfile="quiz3_2pic.jpg")
img<-readJPEG("quiz3_2pic.jpg",native=TRUE)
download.file(url,destfile="quiz3_2pic.jpg",mode="wb")
img<-readJPEG("quiz3_2pic.jpg",native=TRUE)
quantile(img,probs=seq(0.,1,.1))
url<-"http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
url2<-"http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv "
download.file(url,destfile="q3a.csv")
download.file(url2,destfile="q3b.csv")
a<-read.csv("q3a.csv")
b<-read.csv("q3b.csv")
c<-arrange(join(a,b))
c<-intersect((a,b))
c<-intersect(a,b)
sum(c)
summary(c)
intersect(a,b)
head(a)
head(b)
head(a)
c<-arrange(join(a,b),Short.Name)
c<-arange(join(a,b),Short.Name)
c<-merge(a,b,by.x="Short.Name",by.y="Short.Name")
c<-merge(a,b,by.x="Short.Name",by.y="Short.Name",all=TRUE)
c<-merge(a,b,all=TRUE)
sum(c)
summar(c)
summary(c)
tail(c)
tail(c$Short.Name)
(c$Short.Name)
head(c)
sort(-(c$GDP))
sort(dec(c$GDP))
sort(des(c$GDP))
library(plyr)
arrange(c,desc(GDP))
names(c)
arrange(c,desc(Gross.Domestic.Product.2012))
arrange(c,desc(Gross.domestic.product.2012))
d<-arrange(c,desc(Gross.domestic.product.2012))
head(d)
c$Short.Name[arrange(c,desc(Gross.domestic.product.2012)),]
c$Short.Name[,arrange(c,desc(Gross.domestic.product.2012))]
head(d)
head(d,12)
d<-arrange(c,desc(Gross.domestic.product.2012))
tail(d)
d<-arrange(a,desc(Gross.domestic.product.2012))
tail(d)
tail(d,100)
tail(d$Short.Name,100)
tail(d$Short.Name)
d$Short.Name
d<-arrange(a,desc(Gross.domestic.product.2012))
d
d<-arrange(c,desc(Gross.domestic.product.2012))
d<-arrange(c,desc(Gross.domestic.product.2012))
d
head(d,2340
)
head(d,234)
c=merge(a,b,all=TRUE)
sum(c)
summary(c)
head(c)
head(c$Short.Name)
head(c$Short.Name,100)
head(c$Short.Name,500)
c=merge(a,b,by.x="Short.Name",by.y="Short.Name",all=TRUE)
names(a)
head(a$X)
c=merge(a,b,by.x="X",by.y="Short.Name",all=TRUE)
summary(c)
head(c)
head(b$Short.Names)
head(b$Short.Name)
names(b)
head(b$CountryCode)
c=merge(a,b,by.x="X",by.y="CountryCode",all=TRUE)
head(c)
summary(c)
head(c)
head(c$X)
sum(c$X)
nrow(c$X)
nrow(c)
head(c$X)
head(c$X,10)
nrow(a)
nrow(b)
c<-a[(a$Gross.domestic.product.2012 ,na.rm()=TRUE),]
c<-a[(a$Gross.domestic.product.2012 na.rm()=TRUE),]
c<-a[(a$Gross.domestic.product.2012 rm.na()=TRUE),]
c<-a[(a$Gross.domestic.product.2012 ,rm.na()=TRUE),]
head(a,200)
c<- a$RANK<-190
c<- a$RANK<=190
head(c,200)
c<- a[a$RANK<=190,]
head(c,200)
c<- a[a$RANK<=190,]
head(c,200)
c<- a[which(a$RANK<=190),]
head(c,200)
head(c,10)
names(a)
head(a$X.1,10)
head(a$X.2,10)
names(b)
a<-read.csv("quiz3a.csv",190)
help(read.csv)
a<-read.csv("quiz3a.csv",nrows=190)
list.files()
a<-read.csv("q3a.csv",nrows=190)
c=merge(a,b,by.x="X",by.y="CountryCode",all=TRUE)
head(c)
summary(C)
summary(c)
head(c$X)
library(dplyr)
intall.packages(dplyr)
packages.install(dplyr)
install.packages("dplyr")
library(dplyr)
dim(c)
dim(a)
table(a$X %in% b$CountryCode)
head(b$CountryCode)
head(a$X)
a<-read.csv("q3a.csv",nrows=190)
table(a$X %in% b$CountryCode)
head(a$X)
d<-a[a$X %in% b$CountryCode,]
names(a)
d$Gross.domestic.product.2012
a<-read.csv("q3a.csv",nrows=192)
d<-a[a$X %in% b$CountryCode,]
names(a)
d$Gross.domestic.product.2012
arrange(d,desc(Gross.domestic.product.2012))
arrange(d,desc(X3))
arrange(d,desc(Gross.domestic.product.2012))
a<-read.csv("q3a.csv",nrows=190)
d<-a[a$X %in% b$CountryCode,]
arrange(d,desc(Gross.domestic.product.2012))
arrange(d,(Gross.domestic.product.2012))
a<-read.csv("q3a.csv")
d<-a[a$X %in% b$CountryCode,]
arrange(d,desc(Gross.domestic.product.2012))
a<-read.csv("q3a.csv",nrows=193)
d<-a[a$X %in% b$CountryCode,]
arrange(d,desc(Gross.domestic.product.2012))
a<-read.csv("q3a.csv",nrows=194)
arrange(d,desc(Gross.domestic.product.2012))
d<-a[a$X %in% b$CountryCode,]
a<-read.csv("q3a.csv",nrows=194)
arrange(d,desc(Gross.domestic.product.2012))
d<-a[a$X.2 %in% b$CountryCode,]
arrange(d,desc(Gross.domestic.product.2012))
head(b$CountryCode)
a<-read.csv("q3a.csv",nrows=190)
merge<-merge(a,b,by.x="X",by.y="CountryCode",all=FALSE)
summary(merge)
arrange(merge,desc(Gross.domestic.product.2012))
q()
list.files()
url<-"http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
url2<-"http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv "
file.download(url,"q3a.csv")
download.file(url,destfile="q3a.csv")
download.file(url2,destfile="q3b.csv")
a<-read.csv("q3a.csv",nrow=190)
a
a<-read.csv("q3a.csv",nrow=190,header=TRUE)
a
b<-read.csv("q3b.csv")
merge<-merge(a,b,by.x="X",by.y="CountryCode",all=FALSE)
merge
a
a<-read.csv("q3a.csv",nrow=195,header=TRUE)
a
a<-read.csv("q3a.csv",nrow=190,header=TRUE)
a
a<-read.csv("q3a.csv",nrow=195,header=TRUE)
a
merge<-merge(a,b,by.x="X",by.y="CountryCode",all=FALSE)
merge
library(dplyr)
merge<-arrange(merge,desc(GDP))
names(merge)
merge<-arrange(merge,desc(Gross.domestic.product.2012))
merge
a<-read.csv("q3a.csv",nrow=5:194,header=TRUE)
a<-read.csv("q3a.csv",skip=5,nrow=194,header=TRUE)
a
nrow(a)
a<-read.csv("q3a.csv",skip=5,nrow=194)
nrow(a)
a<-read.csv("q3a.csv",skip=5,nrow=190)
nrow(a)
a
a<-read.csv("q3a.csv",nrow=190)
head(a,4)
head(a,5)
a<-read.csv("q3a.csv",skip=4,nrow=190)
a
merge<-arrange(merge,desc(Gross.domestic.product.2012))
merge<-arrange(merge,desc(GDP))
merge<-merge(a,b,by.x="X",by.y="CountryCode",all=FALSE)
merge<-arrange(merge,desc(Gross.domestic.product.2012))
merge
head(merge)
names(merge)
names(a)
a<-read.csv("q3a.csv",skip=4,nrow=190,header=TRUE)
names(a)
a<-read.csv("q3a.csv",skip=3,nrow=190)
names(a)
a<-read.csv("q3a.csv",skip=2,nrow=190)
names(a)
a<-read.csv("q3a.csv",skip=1,nrow=190)
names(a)
a<-read.csv("q3a.csv",nrow=190)
names(a)
merge<-arrange(merge,desc(X.1))
merge
names(merge)
head(a)
names(b)
head(b[,5])
head(b)
head(a)
b[1,]
b[1,]
head(b$Income.Group)
head(merge$Income.Group)
mean(merge$Income.Group=OECD)
avg<-merge$Income.Group=OECD
avg<-merge$Income.Group="OECD"
avg<-merge$Income.Group="High income: OECD"
avg<-merge[merge$Income.Group="High income: OECD",]
avg<-merge[merge$Income.Group eq "High income: OECD",]
avg<-merge[merge$Income.Group=="High income: OECD",]
avg
mean(avg$X.1)
avg2<-merge[merge$Income.Group=="High income: nonOECD",]
mean(avg2$X.1)
cut<-quantile(merge$X.1, probs=seq(0,1,.2))
cut
table(cut$Income.Group)
names(cut)
library(Hmisc)
install.library("Hmisc")
install.libraries("Hmisc")
libraries.install("Hmisc")
install.packages("Hmisc")
library(Hmisc)
avg$X.1 =cut2(merge$X.1,g=5)
merge$X.1 =cut2(merge$X.1,g=5)
table(merge$X.1,merge$Income.Group)
str(merge)
set.seed(1)
rpois(5,2)
x<-rep(0:1,each=5)
x
library(datasets)
Rprof()
fit<-lm(y~x1+x2)
q()
library(quantmod)
install.packages(quantmod)
install.packages("quantmod")
library(quantmod)
amzn=getSymbols("AMZN",auto.assign=FALSE)
sampleTimes=index(amzn)
summary(sampleTimes)
sum(sampleTimes)
sampleTimes
class(sampleTimes)
years(sampleTimes)
install.packages("lubridate")
library(lubridate)
y(sampleTimes)
print,y(sampleTimes)
print,sampleTimes$years
y(sampleTimes)
y(sampleTimes[1])
sampleTimes[1]
years(sampleTimes[1])
y(sampleTimes[1])
dum<-chron(sampleTimes)
years(sampleTimes)
sampleTimes
url<-"http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv "
download.file(url,destfile="q4.csv")
a<-read.csv("q4.csv")
split=strsplit(names(a),"wgtp")
split[123]
url2<-"http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url2,destfile="q4_2.csv")
b<-read.csv("q4_2.csv",skip=4,nrow=190)
names(b)
sub(",","",b$X.1)
sub(",","",b$X.1,)
gsub(",","",b$X.1,)
c<-gsub(",","",b$X.1,)
c
d<-read.csv("q4_2.csv",nrow=190)
head(d)
head(b$X.1)
head(b$X.2)
head(b$X.3)
head(b$X.4)
head(b$X.5)
head(b$X.6)
head(b$X.7)
head(b$X.8)
head(b$X)
c<-gsub(",","",b$X.4,)
c
d<-as.numeric(c)
d
mean(d)
head(b$X)
head(b$X.5)
head(b$X.6)
head(b$X.7)
head(b$X.8)
head(b$X.9)
head(b$X.2)
head(b$X.3)
grep("^United",b$X.3)
grep("*United",b$X.3)
grep("United$",b$X.3)
url3<-"http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url3,destfile="q4_4.csv")
e<-read.csv("q4_4.csv")
merge<-merge(b,e,by.x="X",by.y="CountryCode",all=FALSE)
merge
names(merge)
d<-read.csv("q4_2.csv",nrow=190)
head(d)
head(d[,1])
head(d[,2])
head(d[,3])
head(d[,4])
head(d[,5])
head(d[,6])
head(d[,7])
head(d[,8])
head(d[,9])
head(d[,10])
head(d[,7],100)
head(d[,8],100)
head(d[,9],100)
head(d[,9],200)
head(d[,8],200)
head(d[,7],200)
d<-read.csv("q4_2.csv",skip=1nrow=190)
d<-read.csv("q4_2.csv",skip=1,nrow=190)
head(d
head(d))
head(d)
head(d[,1])
head(d[,2])
head(d[,4])
head(d[,5])
head(d[,6])
head(d[,7])
head(e)
head(e,10)
head(e[,3],10)
head(e[,4],10)
head(e[,5],10)
head(e[,6],10)
head(e[,7],10)
head(e[,8],10)
head(e$Special.Notes],10)
head(e$Special.Notes,10)
grep("Fiscal year end",e$Special.Notes)
grep("Fiscal year end",e$Special.Notes,value=TRUE)
grep("[Mm]arch",grep("Fiscal year end",e$Special.Notes,value=TRUE))
sum(grep("[Mm]arch",grep("Fiscal year end",e$Special.Notes,value=TRUE)))
grep("[Mm]arch",grep("Fiscal year end",e$Special.Notes,value=TRUE),value=TRUE)
dum<-as.numeric(sampleTimes)
head(dum)
dum<-as.Date("1jan2012","%d%b%y")
dum
dif<-sampleTime-dum
dif<-sampleTimes-dum
dif
dum
dum<-as.Date("1jan12","%d%b%y")
dum
dif<-sampleTimes-dum
dif
tot<-dif>0 & dif<366
tot
sum(tot)
tot<-dif>=0 & dif<366
sum(tot)
wdays(sampleTimes,tot=TRUE)
wday(sampleTimes,tot=TRUE)
wday(sampleTimes[tot=TRUE])
wday(sampleTimes[tot=TRUE],label=TRUE)
mon<-grep("Mon",wday(sampleTimes[tot=TRUE],label=TRUE))
mon
mon<-grep("Mon",wday(sampleTimes[tot=TRUE],label=TRUE),value=TRUE)
mon
tot
mon<-grep("Mon",wday(sampleTimes[tot==TRUE],label=TRUE),value=TRUE)
mon
sum(mon)
mon
dum
q()
getwd()
setwd("C:/Users/mitchell/Courserawork/Repro_research_hwk1/RepData_PeerAssessment1/")
head(meaninit)
data<-read.csv("activity.csv")
intervals<-as.vector(unique(data$interval))
meanint<-vector(length=length(intervals))
data[is.na(data$steps),3]
dum<-data[is.na(data$steps),3]
dum
for (i in 1:length(dum)){
meaninit[dum[i]==intervals]
}
for (i in 1:length(intervals)){
    meanint[i]<-mean(data[data$interval==intervals[i],1],na.rm=TRUE)
  }
for (i in 1:length(dum)){
meaninit[dum[i]==intervals]
}
for (i in 1:length(dum)){
meanint[dum[i]==intervals]
}
for (i in 1:length(dum)){
here<-meanint[dum[i]==intervals]
print(here)}
datause<-data
datause[is.na(data$steps),1]<-meanint[dum==intervals]
summary(datause)
dd<-vector(length(is.na(data$stesp)))
dd<-vector(length(is.na(data$steps)))
dd<-vector(length=length(is.na(data$steps)))
for (i in 1:length(dum)){
dd[i]<-meanint[dum[i]==intervals]}
datause[is.na(data$steps),1]<-dd
length(dd)
dd<-vector(length=length(data[is.na(data$steps),1]))
length(dd)
for (i in 1:length(dum)){
dd[i]<-meanint[dum[i]==intervals]}
datause[is.na(data$steps),1]<-dd
summary(datause)
q()
